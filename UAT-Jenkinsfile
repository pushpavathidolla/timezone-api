pipeline {
    agent any
    tools {
        maven "maven 3.6.3"
    }
	stages{
        stage('Build') {
            steps {
                // Get source code from a GitHub repository
                // git 'https://github.com/vasuyalla/timezone-api.git'
                // Run Maven on a Unix agent.
                // sh "mvn -Dmaven.test.failure.ignore=true clean package"
		sh "echo Building here...."
            } 
	    post {
                 always {
                     jiraSendBuildInfo site: 'tibcoservicedesk.atlassian.net', branch: 'uat'
                 }
             }
	  }
         stage('Unit Test Application'){
       steps{
        sh "mvn clean test"
      }
    }
        stage('Deploy API in UAT Environment') {
				 steps {
		    script{
				 sh	"mvn clean deploy -DmuleDeploy -DskipTests -Dmule.version=4.4.0 -Danypoint.username=syalla_vasu -Danypoint.password=V@suma2020 -Denv=UAT -Dappname=uat-worldtimezone-api -Dbusiness=Medtronics -DvCore=Micro -Dworkers=1"
					}	              	               
                }	
               post {
                 always {
           	     jiraSendDeploymentInfo environmentId: 'UAT', environmentName: 'UAT', environmentType: 'staging'
                 }
             }
	    }
	    }
	    post {  
        success {  
          mail bcc: '', body: "<b>Build Success</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "Build Success: Project name -> ${env.JOB_NAME}", to: "syalla.vasu@gmail.com";
        }  
        failure {  
            mail bcc: '', body: "<b>Build Failure</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "Build Failure: Project name -> ${env.JOB_NAME}", to: "syalla.vasu@gmail.com";  
         }  
    }  
    }
